class TreeNode():
    def __init__(self, val = 0, left = None, right = None):
        self.val = val
        self.left = None
        self.right = None

class Solution(object):
    # 定义函数：获取二叉树的所有路径
    def binaryTreePaths(self, root):
        if not root:
            return None
    
        paths = []
        self.construct_paths(root, str(root.val), paths)
        return paths



# 辅助函数：递归获取路径
    def construct_paths(self, node, path, paths):
        if not node.left and not node.right:
            paths.append(path)
            return
        if node.left:
            self.construct_paths(node.left, path + '->' + str(node.left.val), paths)
        if node.right:
            self.construct_paths(node.right, path + '->' + str(node.right.val), paths)



root = TreeNode(1)
root.left = TreeNode(2)
root.right = TreeNode(3)
root.right.left = TreeNode(5)
root.right.right = TreeNode(4)

result = Solution()
result.binaryTreePaths(root)
